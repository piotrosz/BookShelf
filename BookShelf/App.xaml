<?xml version="1.0" encoding="utf-8"?>
<Application x:Class="BookShelf.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             StartupUri="MainWindow.xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:vm="clr-namespace:BookShelf" mc:Ignorable="d"
             xmlns:local="clr-namespace:BookShelf">
    <Application.Resources>
        <local:BooleanVisiblityConverter x:Key="convVis"/>

        <Style x:Key="ListViewUnSelected" TargetType="{x:Type TextBlock}">
            <Setter Property="Visibility" Value="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource convVis}, ConverterParameter=False}" />
        </Style>
        <Style x:Key="ListViewSelected" TargetType="{x:Type FrameworkElement}">
            <Setter Property="Visibility" Value="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource convVis}, ConverterParameter=True}" />
        </Style>

        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <DockPanel>
                <TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
                <Path  x:Name="arrow"
                       StrokeThickness = "1"
                       Fill = "Gray"
                       Data = "M 5,10 L 15,10 L 10,5 L 5,10"/>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <DockPanel>
                <TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
                <Path   x:Name="arrow"
                        StrokeThickness = "1"
                        Fill = "Gray"
                        Data = "M 5,5 L 10,10 L 15,5 L 5,5"/>
            </DockPanel>
        </DataTemplate>

        <Style x:Key="buttonStyle">
            <Setter Property="Button.FontSize" Value="12"/>
            <Setter Property="Button.Background" Value="Purple"/>
            <Setter Property="Button.Foreground" Value="White"/>
        </Style>

        <Style x:Key="menuStyle" TargetType="{x:Type Menu}">
            <Setter Property="Menu.FontSize" Value="12"/>
            <Setter Property="Menu.Background" Value="Purple"/>
        </Style>

        <Style x:Key="menuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="Menu.FontSize" Value="12"/>
            <Setter Property="Menu.Background" Value="Purple"/>
            <Setter Property="Menu.Foreground" Value="White"/>
        </Style>

        <Style x:Key="textBoxStyle" TargetType="{x:Type TextBox}">
            <Style.Setters>
                <Setter Property="Margin" Value="8,5,8,5"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="MinWidth" Value="100"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Background" Value="Salmon"/>
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="comboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="8,5,8,5"/>
            <Setter Property="MinWidth" Value="100"/>
        </Style>

        <Style x:Key="listViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="FontSize" Value="14"></Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,2,40,2" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="true">
                            <Border Background="Red" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white">
                                </TextBlock>
                            </Border>
                            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                                <Border BorderBrush="red" BorderThickness="1" />
                            </AdornedElementPlaceholder>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="true">
                            <Border Background="Red" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white">
                                </TextBlock>
                            </Border>
                            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                                <Border BorderBrush="red" BorderThickness="1" />
                            </AdornedElementPlaceholder>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="gvHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="Purple"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
    </Application.Resources>
</Application>